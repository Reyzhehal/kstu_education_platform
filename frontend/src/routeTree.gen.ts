/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ClassesRouteImport } from './routes/classes'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as CoursesIndexRouteImport } from './routes/courses.index'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as CoursesProgressRouteImport } from './routes/courses.progress'
import { Route as CoursesFavoritesRouteImport } from './routes/courses.favorites'
import { Route as CoursesArchiveRouteImport } from './routes/courses.archive'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutNotificationsRouteImport } from './routes/_layout/notifications'
import { Route as LayoutNewsRouteImport } from './routes/_layout/news'
import { Route as LayoutTeachIndexRouteImport } from './routes/_layout/teach/index'
import { Route as LayoutSettingsIndexRouteImport } from './routes/_layout/settings/index'
import { Route as LayoutLearnIndexRouteImport } from './routes/_layout/learn/index'
import { Route as LayoutCatalogIndexRouteImport } from './routes/_layout/catalog/index'
import { Route as LayoutSettingsSocialRouteImport } from './routes/_layout/settings/social'
import { Route as LayoutSettingsProfileRouteImport } from './routes/_layout/settings/profile'
import { Route as LayoutSettingsPasswordRouteImport } from './routes/_layout/settings/password'
import { Route as LayoutSettingsDangerRouteImport } from './routes/_layout/settings/danger'
import { Route as LayoutSettingsAppearanceRouteImport } from './routes/_layout/settings/appearance'
import { Route as LayoutPromoIdRouteImport } from './routes/_layout/promo/$id'
import { Route as LayoutProfileIdRouteImport } from './routes/_layout/profile/$id'
import { Route as LayoutCatalogIdRouteImport } from './routes/_layout/catalog/$id'
import { Route as LayoutLessonLessonIdEditRouteImport } from './routes/_layout/lesson/$lessonId.edit'
import { Route as LayoutCourseCourseIdTabRouteImport } from './routes/_layout/course/$courseId.$tab'
import { Route as LayoutCatalogMetaIdRouteImport } from './routes/_layout/catalog/meta.$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassesRoute = ClassesRouteImport.update({
  id: '/classes',
  path: '/classes',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesIndexRoute = CoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const CoursesProgressRoute = CoursesProgressRouteImport.update({
  id: '/courses/progress',
  path: '/courses/progress',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesFavoritesRoute = CoursesFavoritesRouteImport.update({
  id: '/courses/favorites',
  path: '/courses/favorites',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesArchiveRoute = CoursesArchiveRouteImport.update({
  id: '/courses/archive',
  path: '/courses/archive',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutNotificationsRoute = LayoutNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutNewsRoute = LayoutNewsRouteImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeachIndexRoute = LayoutTeachIndexRouteImport.update({
  id: '/teach/',
  path: '/teach/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsIndexRoute = LayoutSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutSettingsRoute,
} as any)
const LayoutLearnIndexRoute = LayoutLearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCatalogIndexRoute = LayoutCatalogIndexRouteImport.update({
  id: '/catalog/',
  path: '/catalog/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsSocialRoute = LayoutSettingsSocialRouteImport.update({
  id: '/social',
  path: '/social',
  getParentRoute: () => LayoutSettingsRoute,
} as any)
const LayoutSettingsProfileRoute = LayoutSettingsProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LayoutSettingsRoute,
} as any)
const LayoutSettingsPasswordRoute = LayoutSettingsPasswordRouteImport.update({
  id: '/password',
  path: '/password',
  getParentRoute: () => LayoutSettingsRoute,
} as any)
const LayoutSettingsDangerRoute = LayoutSettingsDangerRouteImport.update({
  id: '/danger',
  path: '/danger',
  getParentRoute: () => LayoutSettingsRoute,
} as any)
const LayoutSettingsAppearanceRoute =
  LayoutSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => LayoutSettingsRoute,
  } as any)
const LayoutPromoIdRoute = LayoutPromoIdRouteImport.update({
  id: '/promo/$id',
  path: '/promo/$id',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProfileIdRoute = LayoutProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCatalogIdRoute = LayoutCatalogIdRouteImport.update({
  id: '/catalog/$id',
  path: '/catalog/$id',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutLessonLessonIdEditRoute =
  LayoutLessonLessonIdEditRouteImport.update({
    id: '/lesson/$lessonId/edit',
    path: '/lesson/$lessonId/edit',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutCourseCourseIdTabRoute = LayoutCourseCourseIdTabRouteImport.update({
  id: '/course/$courseId/$tab',
  path: '/course/$courseId/$tab',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCatalogMetaIdRoute = LayoutCatalogMetaIdRouteImport.update({
  id: '/catalog/meta/$id',
  path: '/catalog/meta/$id',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/classes': typeof ClassesRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/news': typeof LayoutNewsRoute
  '/notifications': typeof LayoutNotificationsRoute
  '/settings': typeof LayoutSettingsRouteWithChildren
  '/courses/archive': typeof CoursesArchiveRoute
  '/courses/favorites': typeof CoursesFavoritesRoute
  '/courses/progress': typeof CoursesProgressRoute
  '/': typeof LayoutIndexRoute
  '/courses': typeof CoursesIndexRoute
  '/catalog/$id': typeof LayoutCatalogIdRoute
  '/profile/$id': typeof LayoutProfileIdRoute
  '/promo/$id': typeof LayoutPromoIdRoute
  '/settings/appearance': typeof LayoutSettingsAppearanceRoute
  '/settings/danger': typeof LayoutSettingsDangerRoute
  '/settings/password': typeof LayoutSettingsPasswordRoute
  '/settings/profile': typeof LayoutSettingsProfileRoute
  '/settings/social': typeof LayoutSettingsSocialRoute
  '/catalog': typeof LayoutCatalogIndexRoute
  '/learn': typeof LayoutLearnIndexRoute
  '/settings/': typeof LayoutSettingsIndexRoute
  '/teach': typeof LayoutTeachIndexRoute
  '/catalog/meta/$id': typeof LayoutCatalogMetaIdRoute
  '/course/$courseId/$tab': typeof LayoutCourseCourseIdTabRoute
  '/lesson/$lessonId/edit': typeof LayoutLessonLessonIdEditRoute
}
export interface FileRoutesByTo {
  '/classes': typeof ClassesRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/news': typeof LayoutNewsRoute
  '/notifications': typeof LayoutNotificationsRoute
  '/courses/archive': typeof CoursesArchiveRoute
  '/courses/favorites': typeof CoursesFavoritesRoute
  '/courses/progress': typeof CoursesProgressRoute
  '/': typeof LayoutIndexRoute
  '/courses': typeof CoursesIndexRoute
  '/catalog/$id': typeof LayoutCatalogIdRoute
  '/profile/$id': typeof LayoutProfileIdRoute
  '/promo/$id': typeof LayoutPromoIdRoute
  '/settings/appearance': typeof LayoutSettingsAppearanceRoute
  '/settings/danger': typeof LayoutSettingsDangerRoute
  '/settings/password': typeof LayoutSettingsPasswordRoute
  '/settings/profile': typeof LayoutSettingsProfileRoute
  '/settings/social': typeof LayoutSettingsSocialRoute
  '/catalog': typeof LayoutCatalogIndexRoute
  '/learn': typeof LayoutLearnIndexRoute
  '/settings': typeof LayoutSettingsIndexRoute
  '/teach': typeof LayoutTeachIndexRoute
  '/catalog/meta/$id': typeof LayoutCatalogMetaIdRoute
  '/course/$courseId/$tab': typeof LayoutCourseCourseIdTabRoute
  '/lesson/$lessonId/edit': typeof LayoutLessonLessonIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/classes': typeof ClassesRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_layout/news': typeof LayoutNewsRoute
  '/_layout/notifications': typeof LayoutNotificationsRoute
  '/_layout/settings': typeof LayoutSettingsRouteWithChildren
  '/courses/archive': typeof CoursesArchiveRoute
  '/courses/favorites': typeof CoursesFavoritesRoute
  '/courses/progress': typeof CoursesProgressRoute
  '/_layout/': typeof LayoutIndexRoute
  '/courses/': typeof CoursesIndexRoute
  '/_layout/catalog/$id': typeof LayoutCatalogIdRoute
  '/_layout/profile/$id': typeof LayoutProfileIdRoute
  '/_layout/promo/$id': typeof LayoutPromoIdRoute
  '/_layout/settings/appearance': typeof LayoutSettingsAppearanceRoute
  '/_layout/settings/danger': typeof LayoutSettingsDangerRoute
  '/_layout/settings/password': typeof LayoutSettingsPasswordRoute
  '/_layout/settings/profile': typeof LayoutSettingsProfileRoute
  '/_layout/settings/social': typeof LayoutSettingsSocialRoute
  '/_layout/catalog/': typeof LayoutCatalogIndexRoute
  '/_layout/learn/': typeof LayoutLearnIndexRoute
  '/_layout/settings/': typeof LayoutSettingsIndexRoute
  '/_layout/teach/': typeof LayoutTeachIndexRoute
  '/_layout/catalog/meta/$id': typeof LayoutCatalogMetaIdRoute
  '/_layout/course/$courseId/$tab': typeof LayoutCourseCourseIdTabRoute
  '/_layout/lesson/$lessonId/edit': typeof LayoutLessonLessonIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/classes'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/news'
    | '/notifications'
    | '/settings'
    | '/courses/archive'
    | '/courses/favorites'
    | '/courses/progress'
    | '/'
    | '/courses'
    | '/catalog/$id'
    | '/profile/$id'
    | '/promo/$id'
    | '/settings/appearance'
    | '/settings/danger'
    | '/settings/password'
    | '/settings/profile'
    | '/settings/social'
    | '/catalog'
    | '/learn'
    | '/settings/'
    | '/teach'
    | '/catalog/meta/$id'
    | '/course/$courseId/$tab'
    | '/lesson/$lessonId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/classes'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/news'
    | '/notifications'
    | '/courses/archive'
    | '/courses/favorites'
    | '/courses/progress'
    | '/'
    | '/courses'
    | '/catalog/$id'
    | '/profile/$id'
    | '/promo/$id'
    | '/settings/appearance'
    | '/settings/danger'
    | '/settings/password'
    | '/settings/profile'
    | '/settings/social'
    | '/catalog'
    | '/learn'
    | '/settings'
    | '/teach'
    | '/catalog/meta/$id'
    | '/course/$courseId/$tab'
    | '/lesson/$lessonId/edit'
  id:
    | '__root__'
    | '/_layout'
    | '/classes'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_layout/news'
    | '/_layout/notifications'
    | '/_layout/settings'
    | '/courses/archive'
    | '/courses/favorites'
    | '/courses/progress'
    | '/_layout/'
    | '/courses/'
    | '/_layout/catalog/$id'
    | '/_layout/profile/$id'
    | '/_layout/promo/$id'
    | '/_layout/settings/appearance'
    | '/_layout/settings/danger'
    | '/_layout/settings/password'
    | '/_layout/settings/profile'
    | '/_layout/settings/social'
    | '/_layout/catalog/'
    | '/_layout/learn/'
    | '/_layout/settings/'
    | '/_layout/teach/'
    | '/_layout/catalog/meta/$id'
    | '/_layout/course/$courseId/$tab'
    | '/_layout/lesson/$lessonId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  ClassesRoute: typeof ClassesRoute
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  CoursesArchiveRoute: typeof CoursesArchiveRoute
  CoursesFavoritesRoute: typeof CoursesFavoritesRoute
  CoursesProgressRoute: typeof CoursesProgressRoute
  CoursesIndexRoute: typeof CoursesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classes': {
      id: '/classes'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/': {
      id: '/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/courses/progress': {
      id: '/courses/progress'
      path: '/courses/progress'
      fullPath: '/courses/progress'
      preLoaderRoute: typeof CoursesProgressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/favorites': {
      id: '/courses/favorites'
      path: '/courses/favorites'
      fullPath: '/courses/favorites'
      preLoaderRoute: typeof CoursesFavoritesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/archive': {
      id: '/courses/archive'
      path: '/courses/archive'
      fullPath: '/courses/archive'
      preLoaderRoute: typeof CoursesArchiveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/notifications': {
      id: '/_layout/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof LayoutNotificationsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/news': {
      id: '/_layout/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof LayoutNewsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teach/': {
      id: '/_layout/teach/'
      path: '/teach'
      fullPath: '/teach'
      preLoaderRoute: typeof LayoutTeachIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings/': {
      id: '/_layout/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof LayoutSettingsIndexRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/learn/': {
      id: '/_layout/learn/'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LayoutLearnIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/catalog/': {
      id: '/_layout/catalog/'
      path: '/catalog'
      fullPath: '/catalog'
      preLoaderRoute: typeof LayoutCatalogIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings/social': {
      id: '/_layout/settings/social'
      path: '/social'
      fullPath: '/settings/social'
      preLoaderRoute: typeof LayoutSettingsSocialRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/settings/profile': {
      id: '/_layout/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof LayoutSettingsProfileRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/settings/password': {
      id: '/_layout/settings/password'
      path: '/password'
      fullPath: '/settings/password'
      preLoaderRoute: typeof LayoutSettingsPasswordRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/settings/danger': {
      id: '/_layout/settings/danger'
      path: '/danger'
      fullPath: '/settings/danger'
      preLoaderRoute: typeof LayoutSettingsDangerRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/settings/appearance': {
      id: '/_layout/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof LayoutSettingsAppearanceRouteImport
      parentRoute: typeof LayoutSettingsRoute
    }
    '/_layout/promo/$id': {
      id: '/_layout/promo/$id'
      path: '/promo/$id'
      fullPath: '/promo/$id'
      preLoaderRoute: typeof LayoutPromoIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/profile/$id': {
      id: '/_layout/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof LayoutProfileIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/catalog/$id': {
      id: '/_layout/catalog/$id'
      path: '/catalog/$id'
      fullPath: '/catalog/$id'
      preLoaderRoute: typeof LayoutCatalogIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/lesson/$lessonId/edit': {
      id: '/_layout/lesson/$lessonId/edit'
      path: '/lesson/$lessonId/edit'
      fullPath: '/lesson/$lessonId/edit'
      preLoaderRoute: typeof LayoutLessonLessonIdEditRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/course/$courseId/$tab': {
      id: '/_layout/course/$courseId/$tab'
      path: '/course/$courseId/$tab'
      fullPath: '/course/$courseId/$tab'
      preLoaderRoute: typeof LayoutCourseCourseIdTabRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/catalog/meta/$id': {
      id: '/_layout/catalog/meta/$id'
      path: '/catalog/meta/$id'
      fullPath: '/catalog/meta/$id'
      preLoaderRoute: typeof LayoutCatalogMetaIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutSettingsRouteChildren {
  LayoutSettingsAppearanceRoute: typeof LayoutSettingsAppearanceRoute
  LayoutSettingsDangerRoute: typeof LayoutSettingsDangerRoute
  LayoutSettingsPasswordRoute: typeof LayoutSettingsPasswordRoute
  LayoutSettingsProfileRoute: typeof LayoutSettingsProfileRoute
  LayoutSettingsSocialRoute: typeof LayoutSettingsSocialRoute
  LayoutSettingsIndexRoute: typeof LayoutSettingsIndexRoute
}

const LayoutSettingsRouteChildren: LayoutSettingsRouteChildren = {
  LayoutSettingsAppearanceRoute: LayoutSettingsAppearanceRoute,
  LayoutSettingsDangerRoute: LayoutSettingsDangerRoute,
  LayoutSettingsPasswordRoute: LayoutSettingsPasswordRoute,
  LayoutSettingsProfileRoute: LayoutSettingsProfileRoute,
  LayoutSettingsSocialRoute: LayoutSettingsSocialRoute,
  LayoutSettingsIndexRoute: LayoutSettingsIndexRoute,
}

const LayoutSettingsRouteWithChildren = LayoutSettingsRoute._addFileChildren(
  LayoutSettingsRouteChildren,
)

interface LayoutRouteChildren {
  LayoutNewsRoute: typeof LayoutNewsRoute
  LayoutNotificationsRoute: typeof LayoutNotificationsRoute
  LayoutSettingsRoute: typeof LayoutSettingsRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutCatalogIdRoute: typeof LayoutCatalogIdRoute
  LayoutProfileIdRoute: typeof LayoutProfileIdRoute
  LayoutPromoIdRoute: typeof LayoutPromoIdRoute
  LayoutCatalogIndexRoute: typeof LayoutCatalogIndexRoute
  LayoutLearnIndexRoute: typeof LayoutLearnIndexRoute
  LayoutTeachIndexRoute: typeof LayoutTeachIndexRoute
  LayoutCatalogMetaIdRoute: typeof LayoutCatalogMetaIdRoute
  LayoutCourseCourseIdTabRoute: typeof LayoutCourseCourseIdTabRoute
  LayoutLessonLessonIdEditRoute: typeof LayoutLessonLessonIdEditRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutNewsRoute: LayoutNewsRoute,
  LayoutNotificationsRoute: LayoutNotificationsRoute,
  LayoutSettingsRoute: LayoutSettingsRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutCatalogIdRoute: LayoutCatalogIdRoute,
  LayoutProfileIdRoute: LayoutProfileIdRoute,
  LayoutPromoIdRoute: LayoutPromoIdRoute,
  LayoutCatalogIndexRoute: LayoutCatalogIndexRoute,
  LayoutLearnIndexRoute: LayoutLearnIndexRoute,
  LayoutTeachIndexRoute: LayoutTeachIndexRoute,
  LayoutCatalogMetaIdRoute: LayoutCatalogMetaIdRoute,
  LayoutCourseCourseIdTabRoute: LayoutCourseCourseIdTabRoute,
  LayoutLessonLessonIdEditRoute: LayoutLessonLessonIdEditRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  ClassesRoute: ClassesRoute,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  CoursesArchiveRoute: CoursesArchiveRoute,
  CoursesFavoritesRoute: CoursesFavoritesRoute,
  CoursesProgressRoute: CoursesProgressRoute,
  CoursesIndexRoute: CoursesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
