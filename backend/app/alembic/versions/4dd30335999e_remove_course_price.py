"""Remove course price

Revision ID: 4dd30335999e
Revises: 825f83f09153
Create Date: 2025-10-15 16:48:09.543817

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4dd30335999e'
down_revision = '825f83f09153'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item')
    op.drop_column('course', 'discount_price')
    op.drop_column('course', 'price')
    op.drop_column('course', 'discount_end_date')
    op.drop_index(op.f('ix_user_email'), table_name='users')
    op.drop_index(op.f('ix_user_username'), table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index(op.f('ix_user_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_user_email'), 'users', ['email'], unique=True)
    op.add_column('course', sa.Column('discount_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('course', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('course', sa.Column('discount_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.create_table('item',
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('item_owner_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('item_pkey'))
    )
    # ### end Alembic commands ###
