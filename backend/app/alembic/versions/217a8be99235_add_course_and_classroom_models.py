"""Add course and classroom models

Revision ID: 217a8be99235
Revises: 85053991474f
Create Date: 2025-10-15 01:41:17.811703

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '217a8be99235'
down_revision = '85053991474f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('currency',
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_currency_code'), 'currency', ['code'], unique=True)
    op.create_table('subcategory',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subcategory_name'), 'subcategory', ['name'], unique=False)
    op.create_table('classroom',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('description_video', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('discount_price', sa.Float(), nullable=True),
    sa.Column('discount_end_date', sa.DateTime(), nullable=True),
    sa.Column('hours_week', sa.Integer(), nullable=True),
    sa.Column('hours_total', sa.Integer(), nullable=True),
    sa.Column('has_certificate', sa.Boolean(), nullable=False),
    sa.Column('difficulty_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('datetime_create', sa.DateTime(), nullable=False),
    sa.Column('datetime_update', sa.DateTime(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=True),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.Column('subcategory_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategory.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classroom_student_link',
    sa.Column('classroom_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('classroom_id', 'user_id')
    )
    op.create_table('course_favorite_link',
    sa.Column('course_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'user_id')
    )
    op.create_table('course_student_link',
    sa.Column('course_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'user_id')
    )
    op.create_table('coursedescriptionblock',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('course_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursepage',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('video', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_demo', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('course_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursedescriptionline',
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('block_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['coursedescriptionblock.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursepagecomment',
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=False),
    sa.Column('datetime_create', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('course_page_id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('reply_to_comment_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['course_page_id'], ['coursepage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reply_to_comment_id'], ['coursepagecomment.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursepagecommentreview',
    sa.Column('is_like', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('comment_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['comment_id'], ['coursepagecomment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id', 'comment_id', name='uq_comment_review_author')
    )
    op.add_column('user', sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('is_staff', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('user', sa.Column('is_teacher', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('user', sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True))
    op.add_column('user', sa.Column('description_short', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('is_profile_private', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('user', sa.Column('avatar_image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_column('user', 'cover_image')
    op.drop_column('user', 'avatar_image')
    op.drop_column('user', 'is_profile_private')
    op.drop_column('user', 'description_short')
    op.drop_column('user', 'description')
    op.drop_column('user', 'last_name')
    op.drop_column('user', 'first_name')
    op.drop_column('user', 'is_teacher')
    op.drop_column('user', 'is_staff')
    op.drop_column('user', 'username')
    op.drop_table('coursepagecommentreview')
    op.drop_table('coursepagecomment')
    op.drop_table('coursedescriptionline')
    op.drop_table('coursepage')
    op.drop_table('coursedescriptionblock')
    op.drop_table('course_student_link')
    op.drop_table('course_favorite_link')
    op.drop_table('classroom_student_link')
    op.drop_table('course')
    op.drop_table('classroom')
    op.drop_index(op.f('ix_subcategory_name'), table_name='subcategory')
    op.drop_table('subcategory')
    op.drop_index(op.f('ix_currency_code'), table_name='currency')
    op.drop_table('currency')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
